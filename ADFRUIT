#include<iostream>
#include<stdio.h>
#include<string>
#include<cstring>
#include<stdlib.h>
using namespace std;
struct node
{
int lc;
string h;
node()
{
lc=0;
}
};
string lcs(char a[],char a1[],int k,int k1)
{
//printf("a:%s a1:%s\n",a,a1);
node* **arr=(node***)calloc(sizeof(node),k);
int i,j,l;
arr[0]=(node**)calloc(sizeof(node),k1);
for(i=0;i<k1;i++)
{
arr[0][i]=new node();
//arr[0][i]->ans=new int(2*k1);

if(a[0]==a1[i])
{
//printf("a[0]==a1[%d]:%c\n",i,a1[i]);

(arr[0][i]->lc)+=2;
arr[0][i]->h+=a[0];
//printf("lc:%d\n",arr[0][i]->lc);

}
else
{
if(i!=0)
{
arr[0][i]->h=arr[0][i-1]->h;
arr[0][i]->lc=arr[0][i-1]->lc;
}
}
//cout<<"arr["<<0<<"]"<<"["<<i<<"]"<<"->h:"<<arr[0][i]->h<<endl;

}
for(i=1;i<k;i++)
{
arr[i]=(node**)calloc(sizeof(node),k1);
arr[i][0]=new node();
if(a1[0]==a[i])
{
//printf("a1[0]==a[%d]:%c\n",i,a[i]);

arr[i][0]->lc+=2;
arr[i][0]->h+=a[i];
//printf("lc:%d\n",arr[i][0]->lc);

}
else
{
arr[i][0]->h=arr[i-1][0]->h;
arr[i][0]->lc=arr[i-1][0]->lc;

}
//cout<<"arr["<<i<<"]"<<"["<<0<<"]"<<"->h:"<<arr[i][0]->h<<endl;

}

for(i=1;i<k;i++)
{
for(j=1;j<k1;j++)
{
arr[i][j]=new node();//arr[i-1][j-1];
if(a[i]==a1[j])
{
//printf("a1[%d]==a[%d]:%c\n",j,i,a[i]);
//printf("a[%d]==a1[%d]:%c\n",i,j,a[i]);
//printf("arr[%d][%d]:lc:%d\n",i-1,j-1,arr[i-1][j-1]->lc);

arr[i][j]->lc=arr[i-1][j-1]->lc;
//cout<<"arr["<<i-1<<"]"<<"["<<j-1<<"]"<<"->h:"<<arr[i-1][j-1]->h<<endl;

arr[i][j]->h=arr[i-1][j-1]->h+a[i];
arr[i][j]->lc=arr[i][j]->lc+2;
//arr[i][j]->ans[(arr[i][j]->lc)-1]=j;
//arr[i][j]->ans[(arr[i][j]->lc)-2]=i;
}
else
{
if(arr[i-1][j]->lc>arr[i][j-1]->lc)
{
arr[i][j]->lc=arr[i-1][j]->lc;
arr[i][j]->h=arr[i-1][j]->h;

}
else
{
arr[i][j]->lc=arr[i][j-1]->lc;
arr[i][j]->h=arr[i][j-1]->h;

}

}
//out<<arr[i][j]->h<<endl;
//intf("arr[%d][%d]:lc:%d\n",i,j,arr[i][j]->lc);
//cout<<"arr["<<i<<"]"<<"["<<j<<"]"<<"->h:"<<arr[i][j]->h<<endl;

}

}
//printf("hi\n");
//cout<<arr[k-1][k1-1]->h;
//printf("%d\n",arr[k-1][k1-1]->lc);
//for(i=0;i<arr[k-1][k1-1]->lc;i+=2)
//{
//printf("smaller:%d greater:%d\n",arr[k-1][k1-1]->ans[i],arr[k-1][k1-1]->ans[i+1]);
//}
//return arr[k-1][k1-1];
return arr[k-1][k1-1]->h;
}
int main()
{
char a[101],a1[101];
int i,j,k,l;
while(scanf("%s%s",a,a1)==2)
{
int k=strlen(a);
int k1=strlen(a1);
string ans;
if(k>k1)
ans=lcs(a1,a,k1,k);
else
ans=lcs(a,a1,k,k1);
//cout<<ans<<endl;
//printf();
int p1=0,p2=0;
char c;
i=0;
int lcsl=ans.length();
while(p1<k||p2<k1)
{
if(i>lcsl)
{
while(p1<k)
printf("%c",a[p1++]);
while(p2<k1)
printf("%c",a1[p2++]);
break;

}
while(a[p1]!=ans[i]&&p1<k)
{
printf("%c",a[p1]);
//printf("");
p1++;
}
//printf("%c",a[p1]);
p1++;
while(a1[p2]!=ans[i]&&p2<k1)
{
printf("%c",a1[p2]);
p2++;
}
//printf("p2:%d\n",p2);
printf("%c",a1[p2]);
p2++;
i++;
}
printf("\n");
}
return 0;
}

