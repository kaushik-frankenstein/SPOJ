#include<bits/stdc++.h>
#define vec vector<pair<int,int> >
#define INF 1061109567
using namespace std;
struct node
{
int w1,w2;
};
  node arr[100000];

class cmp
{
 public:
 	bool operator()(const pair<pair<int,int>,int>& p1,const pair<pair<int,int>,int>& p2)
 	{
 		return p1.second>p2.second;
 	}
};
int n,m,k,s,t;
int dijk(vec v[],vec v1[])
{
  memset(arr,INF,sizeof(arr));
  priority_queue<pair<pair<int,int>,int>,vector<pair<pair<int,int>,int> >,cmp> q;
  arr[s].w1=0;
  arr[s].w2=0;
  q.push(make_pair(make_pair(s,1),0));
  q.push(make_pair(make_pair(s,2),0));
  while(!q.empty())
  {
  	pair<pair<int,int>,int> p=q.top();
  	q.pop();
  	int num=p.first.first;
  	int type=p.first.second;
  	int cost=p.second;
  	if(num==t)
  		return cost;
  	int n1=v[num].size();
  	int n2=v1[num].size();
  	if(type==1)
  	{
  		int i;
  		for(i=0;i<n1;i++)
  		{
  			int dest=v[num][i].first;
  			if(cost+v[num][i].second<arr[dest].w1)
  			{
  				arr[dest].w1=cost+v[num][i].second;
  				q.push(make_pair(make_pair(dest,1),arr[dest].w1));
  			}

  		}
  		for(i=0;i<n2;i++)
  		{
  			int dest=v1[num][i].first;
  			if(cost+v1[num][i].second<arr[dest].w2)
  			{
  				arr[dest].w2=cost+v1[num][i].second;
  				q.push(make_pair(make_pair(dest,2),arr[dest].w2));
  			}

  		}

  	}
  	else
  	{
  		int i;
  		for(i=0;i<n1;i++)
  		{
  			int dest=v[num][i].first;
  			if(cost+v[num][i].second<arr[dest].w2)
  			{
  				arr[dest].w2=cost+v[num][i].second;
  				q.push(make_pair(make_pair(dest,2),arr[dest].w2));
  			}
  		}

  	}
  }
  return -1;

}
int main()
{
	int t1;
	scanf("%d",&t1);
	while(t1--)
	{
		scanf("%d%d%d%d%d",&n,&m,&k,&s,&t);
		vec v[n+2];
		vec v1[n+2];
		int i;
		for(i=0;i<m;i++)
		{
			int e1,e2,cost;
			scanf("%d%d%d",&e1,&e2,&cost);
			v[e1].push_back(make_pair(e2,cost));
		}
		for(i=0;i<k;i++)
		{
			int e1,e2,cost;
			scanf("%d%d%d",&e1,&e2,&cost);
			v1[e1].push_back(make_pair(e2,cost));
            v1[e2].push_back(make_pair(e1,cost));
		}
		printf("%d\n",dijk(v,v1));




	}
	return 0;
}
