#include<stdio.h>
#include<string>
#include<iostream>
#include<Windows.h>
using namespace std;
char a[101][101];
int n;
int visited[102];
int mark[27][27];
int len[102];
string ans;
int find1(char c)
{
    int i;
    for(i=0;i<26;i++)
    {
                     if(ans[i]==c)
                     return i;
    }
}
int find(int i)
{
     if(visited[i]==1)
     return find1(i+97);
     visited[i]=1;
     int maxi=i;
     int i1=0;
     for(i1=0;i1<26;i1++)
     {
       if(mark[i][i1]==1)    
       maxi=max(maxi,find(i1));
     }

     if(maxi!=i)
     {
       int pos1=find1(i+97);
       ans.erase(ans.begin()+pos1,ans.begin()+pos1+1);
       ans.insert(ans.begin()+maxi,(i+97));
     }

return maxi;     
}
int cycle(int ch,int level)
{
    int i;
    visited[ch]=level;
    int ans=0;
    for(i=0;i<26&&(ans+1);i++)
    {
      if(mark[ch][i]==1&&visited[i]<level&&visited[i]!=-1)
      return -1;
      else
      if(mark[ch][i]==1&&visited[i]==-1)
       ans=cycle(i,level+1);
    }
    visited[ch]=-1;
    return ans;
}
int main()
{
    int i,j;
    for(i=0;i<26;i++)
    ans+=(i+97);
   scanf("%d",&n);
    for(i=0;i<n;i++)
    {
     scanf("%s",a[i]);
     len[i]=strlen(a[i]);
     }
    for(i=0;i<101;i++)
    {
      for(j=0;j<n-1;j++)
      {
        if(visited[j]==0&&i<=len[j]-1&&i>(len[j+1]-1))
        {
          printf("Impossible\n");
          return 0;
        }
        else
        if(visited[j]==0&&i<=(len[j]-1)&&i<=(len[j+1]-1)&&a[j][i]!=a[j+1][i])
        {
          visited[j]=1;
          mark[a[j+1][i]-97][a[j][i]-97]=1;
        }
      }

    }
    int ans=0;
       for(i=0;i<26;i++)
      visited[i]=-1;
 
    for(i=0;i<26&&(ans+1);i++)
    {
    if(visited[i]==-1)
      ans=cycle(i,0);

}
if(ans==-1)
{
printf("Impossible\n");
return 0;
}
for(i=0;i<26;i++)
      visited[i]=0;
 

for(i=0;i<26;i++)
 find(i);
cout<<::ans<<endl;
    return 0;
}
